// Generated by CoffeeScript 1.7.1
var application, _base;

if ((_base = process.env).NODE_ENV == null) {
  _base.NODE_ENV = "development";
}

process.on('uncaughtException', function(err) {
  console.error(err.message);
  return console.error(err.stack);
});

process.env.DATASYSTEM_HOST = process.env.DATASYSTEM_PORT_9101_TCP_ADDR || 'localhost';

process.env.DATASYSTEM_PORT = process.env.DATASYSTEM_PORT_9101_TCP_PORT || '9101';

process.env.DATASYSTEM_URL = "http://" + process.env.DATASYSTEM_HOST + ":" + process.env.DATASYSTEM_PORT;

process.env.HOME_HOST = process.env.HOME_PORT_9103_TCP_ADDR || 'localhost';

process.env.HOME_PORT = process.env.HOME_PORT_9103_TCP_PORT || process.env.DEFAULT_REDIRECT_PORT || '9103';

process.env.HOME_URL = "http://" + process.env.HOME_HOST + ":" + process.env.HOME_PORT;

process.env.COUCH_HOST = process.env.COUCH_PORT_5984_TCP_ADDR || 'localhost';

process.env.COUCH_PORT = process.env.COUCH_PORT_5984_TCP_PORT || '5984';

process.env.COUCH_URL = "http://" + process.env.COUCH_HOST + ":" + process.env.COUCH_PORT;

process.env.INDEXER_HOST = process.env.INDEXER_PORT_9102_TCP_ADDR || 'localhost';

process.env.INDEXER_PORT = process.env.INDEXER_PORT_9102_TCP_ADDR || '9102';

process.env.INDEXER_URL = "http://" + process.env.INDEXER_HOST + ":" + process.env.INDEXER_PORT;

process.env.CONTROLLER_HOST = process.env.CONTROLLER_PORT_9002_TCP_ADDR || 'localhost';

process.env.CONTROLLER_PORT = process.env.CONTROLLER_PORT_9002_TCP_PORT || '9002';

process.env.CONTROLLER_URL = "http://" + process.env.CONTROLLER_HOST + ":" + process.env.CONTROLLER_PORT;

process.env.DOCKPROXY_HOST = process.env.DOCKPROXY_PORT_8000_TCP_ADDR;

process.env.DOCKPROXY_PORT = process.env.DOCKPROXY_PORT_8000_TCP_PORT;

process.env.DOCKPROXY_URL = "http://" + process.env.DOCKPROXY_HOST + ":" + process.env.DOCKPROXY_PORT;

console.log(process.env);

application = module.exports = function(callback) {
  var americano, errorMiddleware, initialize, options;
  americano = require('americano');
  initialize = require('./server/initialize');
  errorMiddleware = require('./server/middlewares/errors');
  options = {
    name: 'proxy',
    port: process.env.PORT || 9104,
    host: process.env.HOST || "127.0.0.1",
    root: __dirname
  };
  return americano.start(options, function(app, server) {
    app.use(errorMiddleware);
    return initialize(app, server, callback);
  });
};

if (!module.parent) {
  application();
}
